module Parallel where

import Concurrency
import Maybe

data Process : Type where
    Send of [SendType : Type] (x : SendType) [channelID : Nat] (Channel SendType id) (P : Process)
    Receive of [RecType : Type]  [channelID : Nat] (RecType -> Process)
    RunParallel of (P : Process) (Q : Process)
    CreateChannel of [channelID : Nat] (P : Process)
    RepSpawn of (P : Process)
    End

prog : Process
prog = CreateChannel [0] (RunParallel
                             (Send [Char] 'a' [0]
                                 (End)
                             )
                             (RunParallel
                                 (Receive [Char] [0]
                                     (\ a . CreateChannel [1]
                                         (Send [Char] 'b' [1] (End))
                                     )
                                 )
                                 (Receive [Char] [1]
                                     ( \ a . End )
                                 )
                             )
                         )
